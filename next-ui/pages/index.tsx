import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import { useSpring, animated } from 'react-spring'
import styles from '../styles/Home.module.css'

function useAPI() {
  const [data, setData] = useState("")
  const baseURL = 'http://localhost:8081'

  async function setupRepo() {
    const data = await fetch(`${baseURL}/repo`, {
      method: 'POST',
      headers: {
        'Content-Type' : 'application/json',
      },
      body: '../deno',
    })
    console.log('setup request', data)
  }

  async function loadDiff(cmd: string) {
    console.log(cmd)
    if (!['prev', 'curr', 'next'].includes(cmd)){
      return
    }
    const data = await fetch(`${baseURL}/commit/${cmd}`)
    setData(await data.text())
  }
  return { data, setupRepo, loadDiff };
}

// next: fetch data and render in frame
function Frame() {
  const [commit, setCommit] = useState(0)
  const { data, setupRepo, loadDiff } = useAPI()
  const styles = useSpring({
    from: { opacity: 0.1 },
    to: { opacity: 1 },
    config: { 
      mass: 1, 
      tension: 280, 
      friction: 120,
      frequency: 2,
    },
    reset: true,
  })

  useEffect(() => {
    setupRepo().then(() => {
      loadDiff('curr')
    })
    async function handleKey({ code }) {
      console.log(code)
      if (code === 'ArrowLeft') { 
        setCommit(prevCommit => {
          return prevCommit && prevCommit - 1
        })
        await loadDiff('prev')
      }
      if (code === 'ArrowRight') {
        // todo: bound by number of commits
        setCommit(prevCommit => {
          return prevCommit + 1
        })
        await loadDiff('next')
      }
    }
    window?.addEventListener('keydown', handleKey)
    // passive?
    return() => window?.removeEventListener('keydown', handleKey)
  }, [])

  const divStyle = {
    border: '1px solid #eaeaea',
    padding: '1.5rem'
  }

  return (
    <div style={divStyle}>
      <animated.div style={styles}>
        Hello you are on{' '}
        {commit < 0 ? '' : '+'}{commit}
      </animated.div>
      <textarea rows="5" cols="30" value={data} readOnly />
    </div>
  )
}

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <Frame />

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
